{"ast":null,"code":"import _classCallCheck from \"/home/alessandro/Documenti/projects/react/close2me/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/alessandro/Documenti/projects/react/close2me/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/alessandro/Documenti/projects/react/close2me/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/alessandro/Documenti/projects/react/close2me/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/alessandro/Documenti/projects/react/close2me/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/alessandro/Documenti/projects/react/close2me/src/components/calendar.tsx\";\nimport * as React from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction'; // needed for dayClick\n\nimport './main.scss';\n\nvar DemoApp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DemoApp, _React$Component);\n\n  function DemoApp(props) {\n    var _this;\n\n    _classCallCheck(this, DemoApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DemoApp).call(this, props));\n    _this.calendarComponentRef = React.createRef();\n\n    _this.toggleWeekends = function () {\n      _this.setState({\n        // update a property\n        calendarWeekends: !_this.state.calendarWeekends\n      });\n    };\n\n    _this.gotoPast = function () {\n      var calendarApi = _this.calendarComponentRef.current.getApi();\n\n      calendarApi.gotoDate('2000-01-01'); // call a method on the Calendar object\n    };\n\n    _this.handleDateClick = function (arg) {\n      /*if (confirm('Would you like to add an event to ' + arg.dateStr + ' ?')) {\r\n        this.setState({  // add new event data\r\n          calendarEvents: this.state.calendarEvents.concat({ // creates a new array\r\n            title: 'New Event',\r\n            start: arg.date,\r\n            allDay: arg.allDay\r\n          })\r\n        })\r\n      }*/\n    };\n\n    _this.state = {\n      calendarWeekends: true,\n      calendarEvents: [// initial event data\n      {\n        title: 'Event Now',\n        start: new Date()\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(DemoApp, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"demo-app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"demo-app-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.toggleWeekends,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"toggle weekends\"), \"\\xA0\", React.createElement(\"button\", {\n        onClick: this.gotoPast,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"go to a date in the past\"), \"\\xA0 (also, click a date/time to add an event)\"), React.createElement(\"div\", {\n        className: \"demo-app-calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(FullCalendar, {\n        defaultView: \"dayGridMonth\",\n        header: {\n          left: 'prev,next today',\n          center: 'title',\n          right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\n        },\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n        ref: this.calendarComponentRef,\n        weekends: this.state.calendarWeekends,\n        events: this.state.calendarEvents,\n        dateClick: this.handleDateClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return DemoApp;\n}(React.Component);\n\nexport { DemoApp as default };","map":{"version":3,"sources":["/home/alessandro/Documenti/projects/react/close2me/src/components/calendar.tsx"],"names":["React","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","DemoApp","props","calendarComponentRef","createRef","toggleWeekends","setState","calendarWeekends","state","gotoPast","calendarApi","current","getApi","gotoDate","handleDateClick","arg","calendarEvents","title","start","Date","left","center","right","Component"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AAEA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B,C,CAA0D;;AAE1D,OAAO,aAAP;;IAOqBC,O;;;;;AAInB,mBAAYC,KAAZ,EAAuB;AAAA;;AAAA;;AACrB,iFAAMA,KAAN;AADqB,UAFvBC,oBAEuB,GAFAP,KAAK,CAACQ,SAAN,EAEA;;AAAA,UAsCvBC,cAtCuB,GAsCN,YAAM;AACrB,YAAKC,QAAL,CAAc;AAAE;AACdC,QAAAA,gBAAgB,EAAE,CAAC,MAAKC,KAAL,CAAWD;AADlB,OAAd;AAGD,KA1CsB;;AAAA,UA4CvBE,QA5CuB,GA4CZ,YAAM;AACf,UAAIC,WAAW,GAAG,MAAKP,oBAAL,CAA0BQ,OAA1B,CAAmCC,MAAnC,EAAlB;;AACAF,MAAAA,WAAW,CAACG,QAAZ,CAAqB,YAArB,EAFe,CAEoB;AACpC,KA/CsB;;AAAA,UAiDvBC,eAjDuB,GAiDL,UAACC,GAAD,EAAc;AAC9B;;;;;;;;;AASD,KA3DsB;;AAGrB,UAAKP,KAAL,GAAa;AACXD,MAAAA,gBAAgB,EAAE,IADP;AAEXS,MAAAA,cAAc,EAAE,CAAE;AAChB;AAAEC,QAAAA,KAAK,EAAE,WAAT;AAAsBC,QAAAA,KAAK,EAAE,IAAIC,IAAJ;AAA7B,OADc;AAFL,KAAb;AAHqB;AAStB;;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAG,KAAKd,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,UAEE;AAAQ,QAAA,OAAO,EAAG,KAAKI,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAFF,mDADF,EAME;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AACE,QAAA,WAAW,EAAC,cADd;AAEE,QAAA,MAAM,EAAE;AACNW,UAAAA,IAAI,EAAE,iBADA;AAENC,UAAAA,MAAM,EAAE,OAFF;AAGNC,UAAAA,KAAK,EAAE;AAHD,SAFV;AAOE,QAAA,OAAO,EAAE,CAAExB,aAAF,EAAiBC,cAAjB,EAAiCC,iBAAjC,CAPX;AAQE,QAAA,GAAG,EAAG,KAAKG,oBARb;AASE,QAAA,QAAQ,EAAG,KAAKK,KAAL,CAAWD,gBATxB;AAUE,QAAA,MAAM,EAAG,KAAKC,KAAL,CAAWQ,cAVtB;AAWE,QAAA,SAAS,EAAG,KAAKF,eAXnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CANF,CADF;AAwBD;;;;EAxCkClB,KAAK,CAAC2B,S;;SAAtBtB,O","sourcesContent":["import * as React from 'react'\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport { EventInput } from '@fullcalendar/core'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport timeGridPlugin from '@fullcalendar/timegrid'\r\nimport interactionPlugin from '@fullcalendar/interaction' // needed for dayClick\r\n\r\nimport './main.scss'\r\n\r\ninterface DemoAppState {\r\n  calendarWeekends: boolean\r\n  calendarEvents: EventInput[]\r\n}\r\n\r\nexport default class DemoApp extends React.Component<{}, DemoAppState> {\r\n\r\n  calendarComponentRef = React.createRef<FullCalendar>()\r\n\r\n  constructor(props: {}) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      calendarWeekends: true,\r\n      calendarEvents: [ // initial event data\r\n        { title: 'Event Now', start: new Date() }\r\n      ]\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='demo-app'>\r\n        <div className='demo-app-top'>\r\n          <button onClick={ this.toggleWeekends }>toggle weekends</button>&nbsp;\r\n          <button onClick={ this.gotoPast }>go to a date in the past</button>&nbsp;\r\n          (also, click a date/time to add an event)\r\n        </div>\r\n        <div className='demo-app-calendar'>\r\n          <FullCalendar\r\n            defaultView=\"dayGridMonth\"\r\n            header={{\r\n              left: 'prev,next today',\r\n              center: 'title',\r\n              right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\r\n            }}\r\n            plugins={[ dayGridPlugin, timeGridPlugin, interactionPlugin ]}\r\n            ref={ this.calendarComponentRef }\r\n            weekends={ this.state.calendarWeekends }\r\n            events={ this.state.calendarEvents }\r\n            dateClick={ this.handleDateClick }\r\n            />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  toggleWeekends = () => {\r\n    this.setState({ // update a property\r\n      calendarWeekends: !this.state.calendarWeekends\r\n    })\r\n  }\r\n\r\n  gotoPast = () => {\r\n    let calendarApi = this.calendarComponentRef.current!.getApi()\r\n    calendarApi.gotoDate('2000-01-01') // call a method on the Calendar object\r\n  }\r\n\r\n  handleDateClick = (arg: any) => {\r\n    /*if (confirm('Would you like to add an event to ' + arg.dateStr + ' ?')) {\r\n      this.setState({  // add new event data\r\n        calendarEvents: this.state.calendarEvents.concat({ // creates a new array\r\n          title: 'New Event',\r\n          start: arg.date,\r\n          allDay: arg.allDay\r\n        })\r\n      })\r\n    }*/\r\n  }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}